@page "/realtime"
@using Microsoft.AspNetCore.SignalR.Client
@implements IAsyncDisposable
@rendermode RenderMode.InteractiveServer
@inject NavigationManager Navigation
@inject HubConnection _hubConnection

<h3>Realtime Data</h3>
@foreach (var realTimeData in CurrentValuePerDevice)
{
    <p>@realTimeData.Key : @realTimeData.Value</p>
}
@if (!CurrentValuePerDevice.Any())
{
    <p>No real time data available :(</p>
}

@code {

    //private string Message { get; set; }
    private Dictionary<string, string> CurrentValuePerDevice { get; set; } = new Dictionary<string, string>();

    protected override async Task OnInitializedAsync()
    {
        _hubConnection.On<string, string>("ReceiveMessage", (key, value) =>
        {
            InvokeAsync(async () =>
            {
                try
                {
                    //Message = value;
                    CurrentValuePerDevice.Add(key, value);
                    StateHasChanged();
                }
                catch (Exception ex)
                {
                    Console.WriteLine($"Error updating UI: {ex.Message}");
                }
            });
        });

        await _hubConnection.StartAsync();
    }

    public async ValueTask DisposeAsync()
    {
        if (_hubConnection.State != HubConnectionState.Disconnected)
        {
            await _hubConnection.StopAsync();
        }
    }

}